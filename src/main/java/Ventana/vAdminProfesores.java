/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Ventana;

import Ventana.Profesor;
import Ventana.vAdministrarCursos;
import Ventana.vActualizarProfesor;
import static Ventana.vAdministrarCursos.contadorCursos;
import static Ventana.vAdministrarCursos.cursos;
import Ventana.vLogin;
import static Ventana.vActualizarProfesor.count;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.Arrays;
import java.util.Iterator;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author William
 */
public class vAdminProfesores extends javax.swing.JFrame {

    public static Profesor[] profesores = new Profesor[50];
    public static int contadorProfesores;
    

    // Para actualizar profesor
    public static int fila;

    public static String codigo;
    public static String nombre;
    public static String apellido;
    public static String correo;
    public static String contrasenia;
    public static String genero;

    /**
     * Creates new form AdministradorProfesores
     */
    public vAdminProfesores() {
        initComponents();
        actualizarListadoProfesores();
        this.setResizable(false);
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        bCrearProf = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        ListadoProfesores = new javax.swing.JTable();
        bEliminar = new javax.swing.JButton();
        bActualizar = new javax.swing.JButton();
        bCargaM = new javax.swing.JButton();
        bHTML = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        TablaGenero = new javax.swing.JTable();
        bCurson = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(51, 51, 255));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel1.setText("Listado Profesores");

        bCrearProf.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        bCrearProf.setText("Crear Profesor");
        bCrearProf.setPreferredSize(new java.awt.Dimension(145, 33));
        bCrearProf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCrearProfActionPerformed(evt);
            }
        });

        ListadoProfesores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Codigo", "Nombre", "Apellido", "Correo", "Contrasenia", "Genero"
            }
        ));
        jScrollPane1.setViewportView(ListadoProfesores);

        bEliminar.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        bEliminar.setText("Eliminar");
        bEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bEliminarActionPerformed(evt);
            }
        });

        bActualizar.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        bActualizar.setText("Actualizar");
        bActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bActualizarActionPerformed(evt);
            }
        });

        bCargaM.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        bCargaM.setText("Carga Masiva");
        bCargaM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCargaMActionPerformed(evt);
            }
        });

        bHTML.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        bHTML.setText("Exportar Listado HTML");
        bHTML.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bHTMLActionPerformed(evt);
            }
        });

        TablaGenero.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null}
            },
            new String [] {
                "Genero", "Porcentaje"
            }
        ));
        jScrollPane2.setViewportView(TablaGenero);

        bCurson.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        bCurson.setText("Cursos");
        bCurson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCursonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(bCrearProf, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26)
                                .addComponent(bActualizar, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(bEliminar, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
                                    .addGap(24, 24, 24)
                                    .addComponent(bCargaM))
                                .addComponent(bHTML, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bCurson)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(bCurson)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bCrearProf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bCargaM)
                            .addComponent(bEliminar))
                        .addGap(35, 35, 35)
                        .addComponent(bHTML)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(61, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bCrearProfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCrearProfActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        vCrearProfesor cp = new vCrearProfesor();
        cp.setVisible(true);
    }//GEN-LAST:event_bCrearProfActionPerformed

    private void bEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bEliminarActionPerformed
        // TODO add your handling code here:
        if(contadorProfesores<1){
            JOptionPane.showMessageDialog(null, "No hay profesores ingresados." , "Aviso" , JOptionPane.INFORMATION_MESSAGE);
        }else{
        fila = ListadoProfesores.getSelectedRow();

        for (int i = fila; i < contadorProfesores - 1; i++) {
            profesores[i] = profesores[i + 1];
        }
        // se reduce en 1 la cantidad de profesores
        contadorProfesores--;

        /*
        DefaultTableModel modeloListado = (DefaultTableModel) ListadoProfesores.getModel();
        modeloListado.setRowCount(contadorProfesores);
         */
        actualizarListadoProfesores();
        }
    }//GEN-LAST:event_bEliminarActionPerformed

    private void bActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bActualizarActionPerformed
        // TODO add your handling code here:
        boolean count=vActualizarProfesor.count;
                count=true;
        if(contadorProfesores<1){
            JOptionPane.showMessageDialog(null, "No hay profesores ingresados." , "Aviso" , JOptionPane.INFORMATION_MESSAGE);
        }else{
        fila = ListadoProfesores.getSelectedRow();

        codigo = ListadoProfesores.getModel().getValueAt(fila, 0).toString();
        nombre = ListadoProfesores.getModel().getValueAt(fila, 1).toString();
        apellido = ListadoProfesores.getModel().getValueAt(fila, 2).toString();
        correo = ListadoProfesores.getModel().getValueAt(fila, 3).toString();
        contrasenia = ListadoProfesores.getModel().getValueAt(fila, 4).toString();
        genero = ListadoProfesores.getModel().getValueAt(fila, 5).toString();
        
        this.setVisible(false);
        vActualizarProfesor ap = new vActualizarProfesor();
        ap.setVisible(true);
        }
    }//GEN-LAST:event_bActualizarActionPerformed

    private void bCargaMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCargaMActionPerformed
        // TODO add your handling code here:
        System.out.println("holaa");

        JFileChooser fc = new JFileChooser();
        fc.showOpenDialog(null);

        String filePath = fc.getSelectedFile().getAbsolutePath();
        System.out.println(filePath);

        BufferedReader reader = null;
        String line = "";



        try {
            reader = new BufferedReader(new FileReader(filePath));
            int contadorFila = 0;
            while ((line = reader.readLine()) != null) {
                if (contadorFila > 0) {
                    String[] columnas = line.split(";");

                    Profesor prof = new Profesor(columnas[0], columnas[1],
                            columnas[2], columnas[3], "1234", columnas[4]);

                    profesores[contadorFila - 1] = prof;

                }
                contadorFila++;

            }
            contadorProfesores = contadorFila - 1;
            System.out.println(Arrays.toString(profesores));
            actualizarListadoProfesores();
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_bCargaMActionPerformed

    private void bHTMLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bHTMLActionPerformed
        // TODO add your handling code here:
        if(contadorProfesores<1){
            JOptionPane.showMessageDialog(null, "No hay profesores ingresados." , "Aviso" , JOptionPane.INFORMATION_MESSAGE);
        }else{
                int i=0;
                BufferedWriter ficheroSalida;
        File file=null;
        try
        {
            file=new File("Reporte de Profesores.html");
            ficheroSalida= new BufferedWriter(new FileWriter(file));
            Profesor oProfesor;

            ficheroSalida.write("<HTML><HEAD><TITLE> Reporte de Articulos </TITLE></HEAD><BODY><TABLE BORDER>");


            ficheroSalida.write("<TR><TH>Codigo</TH><TH>NOMBRE</TH><TH>APELLIDO</TH><TH>CORREO</TH><TH>CONTRASEÑA</TH><TH>GENERO</TH></TR>");
            while (i<contadorProfesores) {
                ficheroSalida.write("<TR><TD>" + profesores[i].codigo +"</TH><TH>" + profesores[i].nombre + "</TH><TH>" + profesores[i].apellido + "</TH><TH>" + profesores[i].correo + "</TH><TH>" + profesores[i].contrasenia + "</TH><TH>" + profesores[i].genero + "</TD></TR>");
                    i++;
        }


            //while(it.hasNext()) {
              //  oProfesor= it.next(); 
                //ficheroSalida.write("<TR><TD>"+oProfesor.getcodigo()+"</TD><TD>"+oArticulo.getNombre()+"</TH><TH>"+oArticulo.getProveedor()+"</TH><TH>"+oArticulo.getPrecio()+"</TH><TH>"+oArticulo.getcantidad()+"</TD></TR>");
            //}
            ficheroSalida.write("</TABLE></BODY></HTML>");

            ficheroSalida.close();
        }

        catch (IOException errorDeFichero)
        {
            System.out.println(
                "Ha habido problemas: " +
                errorDeFichero.getMessage() );
        }

        abrirReporte(file);
    }//GEN-LAST:event_bHTMLActionPerformed
    }
    private void abrirReporte(File file)
   {
        Runtime rTime = Runtime.getRuntime();
        String browser = "C:/Program Files/Internet Explorer/iexplore.exe ";
        
        Process pc = null;
        
   }
    
    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        this.setVisible(false);
        vLogin lg = new vLogin();
        lg.setVisible(true);
    }//GEN-LAST:event_formWindowClosing

    private void bCursonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCursonActionPerformed
        // TODO add your handling code here:
        if(contadorProfesores==0){
        JOptionPane.showMessageDialog(null, "Se necesita ingresar un profesor primero." , "Aviso" , JOptionPane.INFORMATION_MESSAGE);
        }else{
        this.setVisible(false);
        vAdministrarCursos ac = new vAdministrarCursos();
        ac.setVisible(true);
        }

    }//GEN-LAST:event_bCursonActionPerformed

    public void actualizarListadoProfesores() {

        if (contadorProfesores > 0) {

            // actualizar listado
            DefaultTableModel modeloListado = (DefaultTableModel) ListadoProfesores.getModel();
            modeloListado.setRowCount(contadorProfesores);

            for (int i = 0; i < contadorProfesores; i++) {
                modeloListado.setValueAt(profesores[i].codigo, i, 0);
                modeloListado.setValueAt(profesores[i].nombre, i, 1);
                modeloListado.setValueAt(profesores[i].apellido, i, 2);
                modeloListado.setValueAt(profesores[i].correo, i, 3);
                modeloListado.setValueAt(profesores[i].contrasenia, i, 4);
                modeloListado.setValueAt(profesores[i].genero, i, 5);
            }

            // contar generos
            int masculino = 0;
            int femenino = 0;

            for (int i = 0; i < contadorProfesores; i++) {
                // si es hombre
                if (profesores[i].genero.equals("m")) {
                    masculino++;
                    // si es mujer
                } else {
                    femenino++;
                }
            }

            System.out.println(masculino);
            System.out.println(femenino);
            System.out.println(contadorProfesores);

            System.out.println((double) (femenino / contadorProfesores));

            // actualizar tabla
            DefaultTableModel modeloListadoG = (DefaultTableModel) TablaGenero.getModel();
            modeloListadoG.setValueAt("Femenino", 0, 0);
            modeloListadoG.setValueAt("Masculino", 1, 0);

            modeloListadoG.setValueAt((double) ((double) femenino / (double) contadorProfesores) * 100, 0, 1);
            modeloListadoG.setValueAt((double) ((double) masculino / (double) contadorProfesores) * 100, 1, 1);
        }
    }

    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable ListadoProfesores;
    private javax.swing.JTable TablaGenero;
    private javax.swing.JButton bActualizar;
    private javax.swing.JButton bCargaM;
    private javax.swing.JButton bCrearProf;
    private javax.swing.JButton bCurson;
    private javax.swing.JButton bEliminar;
    private javax.swing.JButton bHTML;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
